openapi: 3.0.0
info:
  title: Peach Campaign API
  version: '1.0'
  description: A collection of API to create and distribute campaigns across the world
  contact:
    name: API Support
    url: 'https://api.peachvideo.com/support'
    email: api.support@peachvideo.com
servers:
  - url: 'http://localhost:3000/v1'
    description: mock server
tags:
  - name: Account
    description: Account api collection
  - name: Campaign
    description: Campaign api collection
  - name: User
    description: User api collection
  - name: Health
    description: End point to verify the status of the api
paths:
  /accounts:
    get:
      summary: Retrieve a list of accounts
      tags:
        - Account
      responses:
        '200':
          description: Successful Account Retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
              examples:
                example-listaccounts:
                  value:
                    - id: 19466
                      name: Peach Support UK
                    - id: 20604
                      name: Peach Support Germany
                    - id: 21222
                      name: Peach Support France
                    - id: 13921
                      name: Hogarth Worldwide Limited (UK/ROI)
                example-2 keyword=Peach:
                  value:
                    - id: 19466
                      name: Peach Support UK
                    - id: 20604
                      name: Peach Support Germany
                    - id: 21222
                      name: Peach Support France
          headers: {}
      operationId: get-accounts
      description: retrieve a list of accounts
      security:
        - Peach Authentication:
            - account.read
      parameters:
        - schema:
            type: string
            example: peach
          in: query
          name: keyword
          description: keyword to be used in the search for accounts
    parameters: []
  '/campaigns/{id}':
    get:
      summary: Retrieve campaign by an identifier
      tags:
        - Campaign
      responses:
        '200':
          description: Successful retrieval of a campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
              examples:
                example-1:
                  value:
                    id: 1884577
                    reference: Aunt Bessie's
                    advertiser: Nomad
                    brand: Aunt Bessie’s
                    createdOn: '2020-10-27T16:37:41Z'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-campaign
      description: Retrieve a specific campaign by an identifier
      security:
        - Peach Authentication:
            - campaign.read
            - campaign.create
            - campaign.update
            - campaign.delete
      parameters: []
    parameters:
      - schema:
          type: integer
          format: int64
          minimum: 1
          example: 123478
        name: id
        in: path
        description: Campaign identifier
        required: true
    put:
      summary: ''
      operationId: put-campaigns-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
              examples:
                example-1:
                  value:
                    id: 2397368
                    reference: '1397368'
                    advertiser: Nespresso
                    brand: Master Original
                    createdOn: '2019-08-24T14:15:22Z'
      security:
        - Peach Authentication:
            - campaign.update
      description: Update campaign fields
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                reference:
                  type: string
                  minLength: 1
                advertiser:
                  type: string
                  minLength: 1
                brand:
                  type: string
                  minLength: 1
              required:
                - reference
                - advertiser
                - brand
            examples:
              example-1:
                value:
                  reference: '1397368'
                  advertiser: Nespresso
                  brand: Master Original
        description: The fields to be updated
      tags:
        - Campaign
    delete:
      summary: Remove campaign
      operationId: delete-campaigns-id
      responses:
        '200':
          description: OK
      description: remove the campaign
      security:
        - Peach Authentication:
            - campaign.delete
      tags:
        - Campaign
  /me:
    get:
      summary: /me
      tags:
        - User
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                example-me:
                  value:
                    email: peach.user@peachvideo.com
                    token: wu0CHimodZY4cjQR832qgKZ5j0RLOFLR-jeroSpFOzo.ACBnfGU9LzARjRgf0GsWOTuyg1GC5nvhC-v1GRyKQIg
                    account: Peach Support UK
                    accountId: 19466
      operationId: get-me
      description: returns the user information for the logged in user
      security:
        - Peach Authentication:
            - user.read
  /ping:
    get:
      summary: Health Check
      tags:
        - Health
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ping'
              examples:
                example-1:
                  value:
                    message: ok
                    status: 200
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: get-ping
      description: health endpoint
      security: []
  /campaigns:
    get:
      summary: Retrieve a list of campaigns
      tags:
        - Campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
              examples:
                example-Campaigns:
                  value:
                    - id: 1886532
                      reference: '205596444'
                      advertiser: Mattel
                      brand: Hot Wheels
                      createdOn: '2020-10-27T16:37:41Z'
                    - id: 1884577
                      reference: Aunt Bessie's
                      advertiser: Nomad
                      brand: Aunt Bessie’s
                      createdOn: '2020-10-27T16:37:41Z'
                    - id: 1824466
                      reference: '205593606'
                      advertiser: SCREWFIX
                      brand: UEFA League
                      createdOn: '2020-10-27T16:37:41Z'
      operationId: get-campaigns
      description: |
        Retrieve a list of campaigns that below to your account
      parameters:
        - schema:
            type: string
          in: query
          name: ref
          description: filter campaigns by a reference
        - schema:
            type: string
          in: query
          name: advertiser
          description: filter campaigns by an advertiser
        - schema:
            type: string
          in: query
          name: brand
          description: filter campaigns by brand
        - schema:
            type: integer
            example: 100
            maximum: 10000
            format: int32
          in: query
          name: limit
          description: the number of records to return for pagination
        - schema:
            type: integer
            format: int32
          in: query
          name: after_row
          description: |
            to move to the next resultset use the last id from the results
        - schema:
            type: string
            example: brand.desc
          in: query
          name: sort_by
          description: 'sort campaign data by advertiser, brand or ref.'
      security:
        - Peach Authentication:
            - campaign.read
            - campaign.create
            - campaign.update
            - campaign.delete
    post:
      summary: Create Campaign
      operationId: post-campaigns
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
              examples:
                example-1:
                  value:
                    id: 2397368
                    reference: '1397368'
                    advertiser: Nespresso
                    brand: Master Origin
                    createdOn: '2019-08-24T14:15:22Z'
      security:
        - Peach Authentication:
            - campaign.create
      description: Create campaign
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                reference:
                  type: string
                  minLength: 1
                  maxLength: 100
                advertiser:
                  type: string
                  minLength: 1
                  maxLength: 255
                brand:
                  type: string
                  minLength: 1
                  maxLength: 255
              required:
                - reference
                - advertiser
                - brand
            examples:
              example-1:
                value:
                  reference: '1397368'
                  advertiser: Nespresso
                  brand: Master Origin
        description: Create a new campaign
      tags:
        - Campaign
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal error encountered. Please contact api.support@peachvideo.com
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Account:
      title: Account
      type: object
      x-examples:
        example-1:
          id: 1920
          name: Peach Demo
      description: Account that has been arranged with Peach
      properties:
        id:
          type: integer
          description: unique identifier for an account
          format: int64
          minimum: 1
        name:
          type: string
          description: account name
          minLength: 1
          maxLength: 256
    Campaign:
      title: Campaign
      type: object
      x-examples:
        example-1:
          id: 1824984
          reference: '205596660'
          advertiser: Mattel
          brand: Hot Wheels
          createdOn: '2020-11-02T10:07:04Z'
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        reference:
          type: string
          minLength: 1
          maxLength: 100
        advertiser:
          type: string
          maxLength: 255
        brand:
          type: string
          maxLength: 255
        createdOn:
          type: string
          format: date-time
    Error:
      title: Error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
      description: Generic Error Response from API
      x-examples:
        example-1:
          code: '500'
          message: Internal Server Error
    User:
      title: User
      type: object
      x-examples:
        example-1:
          email: peach.user@peachvideo.com
          token: wu0CHimodZY4cjQR832qgKZ5j0RLOFLR-jeroSpFOzo.ACBnfGU9LzARjRgf0GsWOTuyg1GC5nvhC-v1GRyKQIg
          account: Peach Support UK
          accountId: 19466
      description: Schema the describes the current logged in user
      properties:
        email:
          type: string
        token:
          type: string
        account:
          type: string
        accountId:
          type: integer
          format: int32
    Ping:
      title: Ping
      type: object
      x-examples:
        example-1:
          message: ok
          status: 200
      description: Result from a ping request
      properties:
        message:
          type: string
          example: ok
        status:
          type: integer
          format: int32
          example: 200
  securitySchemes:
    Peach Authentication:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://peach-mock.auth.us-west-2.amazoncognito.com/oauth2/authorize'
          scopes:
            openid: 'JWT Token  that contains claims about the identity of the authenticated user such as name, email, and phone_number'
            campaign.read: Read campaign data
            campaign.create: Create campaign
            campaign.update: Update campaign data
            campaign.delete: Delete campaign
            user.read: read user data
            account.read: read account data
      description: ''
security:
  - Peach Authentication:
      - openid
